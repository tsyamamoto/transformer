# Default jakarta text master configuration.
#
# The text update strategy performs simple text substitutions on raw text.
#
# Text updates are the current implementation of updates to structured text files,
# such as xml, jsp, jspx, html, or xhtml.  For these files, preserving the original
# file structure is difficult if the file contents are parsed before performing the
# update.
#
# The text update strategy uses two tiers of properties files:
#
# A top level "master" properties file.  The master properties file contains key/value pairs which
# together specify a file selection rule and a set of substitutions which are to be performed on
# the selected files.
#
# The key is a selection rule specified against simple file names.
#
# The value is the names, comma-separated, of the properties files which contains the
# substitutions which are to be made on the selected files:
#
# simple-file-name=substution-properties-file-name
#
# Substitution configurations are resolved relative to the location of the master text configuration:
# If the master text configuration is specified as file in the local file system, substitution
# configurations are resolved as files in same directory as the master text configuration file.
# If the master text configuration is a default resource which is packaged within the jakarta
# transformer archive, the substitution configurations are resolved as resources within the
# jakarta transformer archive relative to the master text configuration resource.
#
# Selection is against simple file names: All additional path information is stripped from the file
# name when selecting files on which substitution is to be performed.
#
# The simple name may contain wildcard characters.  If either wildcard '?' or '*' are present, the
# simple file name is processed as a java regular expression, and matching is performed using
# java.util.regex.Pattern.  (Matching still is performed against simple file names.)
#
# All specific simple file name selection is performed before pattern based selection.  See
# example (3), below.
#
# Example 1:
#
# Apply substitutions specified in "jakarta-server-xml.properties" to "server.xml" files.
#
# server.xml=jakarta-server-xml.properties
#
# Example 2:
#
# Apply substitutions found in "jakarta-all-xml.properties" to all XML files.
#
# *.xml=jakarta-all-xml.properties
#
# Example 3:
#
# As above, except that substitutions on "server.xml" are performed using
# "jakarta-server-xml.properties".  The substitutions in 'jakarta-all-xml.properties"
# will be performed on all XML files except "server.xml".
#
# *.xml=jakarta-all-xml.properties
# server.xml=jakarta-server-xml.properties
#

*.tag=jakarta-direct.properties,jakarta-renames.properties
*.taglib.xml=jakarta-renames.properties
*.tld=jakarta-direct.properties

application.xml=jakarta-application-xml.properties,jakarta-direct.properties
application-client.xml=jakarta-application-xml.properties,jakarta-direct.properties
beans.xml=jakarta-beans-xml.properties,jakarta-direct.properties
ejb-jar.xml=jakarta-ejb-jar-xml.properties,jakarta-direct.properties
glassfish-*.xml=jakarta-direct.properties
permissions.xml=jakarta-permissions-xml.properties,jakarta-direct.properties
persistence.xml=jakarta-persistence-xml.properties,jakarta-direct.properties
ra.xml=jakarta-ra-xml.properties,jakarta-direct.properties
validation.xml=jakarta-direct.properties
web.xml=jakarta-web-xml.properties,jakarta-direct.properties,jakarta-renames.properties
web-fragment.xml=jakarta-web-xml.properties,jakarta-direct.properties,jakarta-renames.properties
faces-config.xml=jakarta-faces-config-xml.properties,jakarta-direct.properties,jakarta-renames.properties
*.faces-config.xml=jakarta-faces-config-xml.properties,jakarta-direct.properties,jakarta-renames.properties
UTService.xml=jakarta-direct.properties
TransactionManager.xml=jakarta-direct.properties
